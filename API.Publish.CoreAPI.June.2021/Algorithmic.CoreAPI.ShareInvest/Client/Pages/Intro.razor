@page "/"
@inherits IntroBase

@if (Initialize is DateTime[])
{
	<div role="navigation">
		<table role="presentation" class="page">
			<tbody>
				<tr>
					@foreach (var kv in IsClick)
					{
						<td class="click">
							<button class="button" title="@((DateTime.UnixEpoch.Equals(Initialize[kv.Key]) ? (Initialize[^3].Hour > 0x15 ? Initialize[^3] : Initialize[^4]) : Initialize[kv.Key]).ToLongDateString())" disabled="@kv.Value" @onclick="(e => OnClick(kv.Key, e))">
								@(DateTime.UnixEpoch.Equals(Initialize[kv.Key]) ? "Tag" : (Initialize.Length - 2 == kv.Key ? "RT" : (Initialize[kv.Key].Day).ToString("D2")))
							</button>
						</td>
					}
				</tr>
			</tbody>
		</table>
	</div>
	<div>
		@foreach (var kv in IsClick)
		{
			if (kv.Value)
			{
				if (kv.Key == Initialize.Length - 1)
				{
					<p class="image">
						@if (Collection is Catalog.Dart.Theme[] && Pick is Catalog.Dart.Theme pick)
						{
							<a href="/tags?index=@pick.Index&name=@System.Web.HttpUtility.UrlEncode(pick.Name)&im=@System.Web.HttpUtility.UrlEncode(User)" target="_blank">
								<img src="/Images/@(pick.Index).png" alt="@pick.Name" />
							</a>
						}
						else
						{
							<img src="/Images/456.png" alt="K-뉴딜지수" />
						}
					</p>
				}
				else if (kv.Key == Initialize.Length - 2 && Close)
				{
					continue;
				}
				else
				{
					if (Conditions is List<Catalog.Models.Intro>[] && Conditions[kv.Key] is List<Catalog.Models.Intro> && Conditions[kv.Key].Count > 0)
					{
						if (kv.Key == Initialize.Length - 2)
						{
							<table class="table">
								<thead>
									<tr>
										@foreach (var head in Base.Head)
										{
											var index = Array.FindIndex(Base.Head, o => o.Equals(head));

											@if (index is 0 or 2 or 3)
											{
												<th>
													<div>
														@head

														@if (IsSort.TryGetValue(head, out bool sort) && sort)
														{
															<span class="oi_search oi oi-sort-ascending" aria-hidden="true" @onclick="e => OnClick(head, kv.Key, e)" />
														}
														else
														{
															<span class="oi_search oi oi-sort-descending" aria-hidden="true" @onclick="e => OnClick(head, kv.Key, e)" />
														}
													</div>
												</th>
											}
											else if (index is 1)
											{
												<th colspan="2" class="head">
													<div>
														@head

														@if (IsSort.TryGetValue(head, out bool sort) && sort)
														{
															<span class="oi_search oi oi-sort-ascending" aria-hidden="true" @onclick="e => OnClick(head, kv.Key, e)" />
														}
														else
														{
															<span class="oi_search oi oi-sort-descending" aria-hidden="true" @onclick="e => OnClick(head, kv.Key, e)" />
														}
													</div>
												</th>
											}
											else
											{
												<th colspan="2" class="head">
													<div>@head</div>
												</th>
											}
										}
									</tr>
								</thead>
								<tbody>
									@foreach (var intro in Conditions[kv.Key])
									{
										@if (string.IsNullOrEmpty(intro.Code) is false)
										{
											var exist = Stocks.TryGetValue(intro.Code, out int current);
											var parse = int.TryParse(intro.Price, out int price);
											var mark = exist ? current : price;
											var rate = exist ? (current > price ? current / (double)price - 1 : 1 - price / (double)current) : 0;
											Sort[intro.Code] = new Tuple<int, double>(mark, rate);

											<tr>
												<td title="Code">
													<div>
														@intro.Code
													</div>
												</td>
												<td title="Name" colspan="2">
													<div class="name">
														<a href="@Base.GetUrl(intro.Code)" target="_blank">
															@intro.Name
														</a>
														<a href="@Base.GetUrl(new[] { intro.Name, "주식", "테마", "무료" })" target="_blank">
															<span class="oi_search oi oi-magnifying-glass" aria-hidden="true" />
														</a>
													</div>
												</td>
												<td title="Current">
													<div>@mark.ToString("N0")</div>
												</td>
												<td title="Rate">
													@if (rate > 0)
													{
														if (current > price)
														{
															<div class="red">@rate.ToString("P2")</div>
														}
														else if (price > current)
														{
															<div class="blue">@rate.ToString("P2")</div>
														}
													}
												</td>
												<td title="Theme" colspan="2">
													@if (string.IsNullOrEmpty(intro.Theme) is false)
													{
														<div class="name">
															@intro.Theme
															<a href="/tags?index=@intro.Index&name=@System.Web.HttpUtility.UrlEncode(intro.Theme)&im=@System.Web.HttpUtility.UrlEncode(User)" target="_blank">
																<span class="oi_search oi oi-magnifying-glass" aria-hidden="true" />
															</a>
														</div>
													}
												</td>
											</tr>
											@if (string.IsNullOrEmpty(intro.Title) is false)
											{
												<tr>
													<td title="Overview" colspan="7">
														<div class="overview">
															@intro.Title.Replace(". ", ".\n")
														</div>
													</td>
												</tr>
											}
										}
									}
								</tbody>
							</table>
						}
						else
						{
							<table class="table">
								<thead>
									<tr>
										@for (int i = 0; i < Inclination.Length + 2; i++)
										{
											var param = i switch
											{
												0 => nameof(Catalog.Models.Intro.Code),
												1 => nameof(Catalog.Models.Intro.Name),
												_ => Inclination[i - 2]
											};
											<th>
												<div>
													@param

													@if (IsSort.TryGetValue(param, out bool sort) && sort)
													{
														<span class="oi_search oi oi-sort-ascending" aria-hidden="true" @onclick="e => OnClick(kv.Key, param, e)" />
													}
													else
													{
														<span class="oi_search oi oi-sort-descending" aria-hidden="true" @onclick="e => OnClick(kv.Key, param, e)" />
													}
												</div>
											</th>
										}
									</tr>
								</thead>
								<tbody>
									@foreach (var intro in Conditions[kv.Key])
									{
										<tr>
											<td title="Code">
												<div>
													@intro.Code
												</div>
											</td>
											<td title="Name">
												<div class="name">
													<a href="@Base.GetUrl(intro.Code)" target="_blank">
														@intro.Name
													</a>
													<a href="@Base.GetUrl(new[] { intro.Name, "주식", "테마", "무료" })" target="_blank">
														<span class="oi_search oi oi-magnifying-glass" aria-hidden="true" />
													</a>
												</div>
											</td>
											@if (intro.Inclination is double[])
											{
												for (int i = 0; i < Inclination.Length; i++)
												{
													<td title="@Inclination[i]">
														<div style="color:@Base.ChangeColor(intro.Inclination[i])">
															@Math.Abs(intro.Inclination[i]).ToString("N3")˚
														</div>
													</td>
												}
											}
											else
											{
												<td colspan="5">
													<div class="overview" />
												</td>
											}
										</tr>
										@if (string.IsNullOrEmpty(intro.Title) is false)
										{
											<tr>
												<td title="Theme" colspan="2" class="middle">
													<div class="name">
														@intro.Theme
														<a href="/tags?index=@intro.Index&name=@System.Web.HttpUtility.UrlEncode(intro.Theme)&im=@System.Web.HttpUtility.UrlEncode(User)" target="_blank">
															<span class="oi_search oi oi-magnifying-glass" aria-hidden="true" />
														</a>
													</div>
												</td>
												<td title="Overview" colspan="5">
													<div class="overview">
														@intro.Title.Replace(". ", ".\n")
													</div>
												</td>
											</tr>
										}
									}
								</tbody>
							</table>
						}
					}
					else
					{
						<p><em>Loading...</em></p>
					}
				}
			}
		}
	</div>
	@if (string.IsNullOrEmpty(User) is false && DateTime.Now is DateTime now && (now.Hour < 0x12 ? now.AddDays(-1) : now).ToString("yyyy-MM-dd") is string date)
	{
		<div class="submit_form">
			<form action=@(Base.IsDebug ? "https://localhost:44393/volume" : "https://coreapi.shareinvest.net/volume") method="get" target="_blank">
				<input class="search_input" name="code" id="search" type="text" placeholder="Search for the Stocks." autocomplete="on" list="search-list" required>
				<input type="date" name="start" class="search_input" required autocomplete="on" value="@date" max="@date">
				<input type="date" name="end" class="search_input" required autocomplete="on" value="@date" max="@date">
				<input type="submit" class="search_input" value="Distribute">
			</form>
			<datalist id="search-list">
				@foreach (var search in Codes.OrderBy(o => o.Name))
				{
					<option value="@search.Code">@search.Name</option>
				}
			</datalist>
		</div>
	}
}
else
{
	<p class="image">
		<img src="/Images/456.png" alt="K-뉴딜지수" />
		<br />
		<em>various Functions are available after LogIn.</em>
	</p>
}