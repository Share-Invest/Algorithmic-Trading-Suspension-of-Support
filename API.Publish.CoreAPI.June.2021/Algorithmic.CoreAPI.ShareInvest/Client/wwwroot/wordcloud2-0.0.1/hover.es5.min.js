"use strict"; function newlabel(n) { var i = document.createElement("a"), r = document.createElement("div"), u = document.createElement("span"), t = n.id; i.id = t + "wcUrl"; i.href = "https://www.google.com/search?q="; i.target = "_blank"; r.id = t + "wcLabel"; r.className += "wcLabel"; u.id = t + "wcSpan"; u.className += "wcSpan"; n.appendChild(i); document.getElementById(t + "wcUrl").appendChild(r); document.getElementById(t + "wcLabel").appendChild(u) } function cv_handleHover(n, t, i) { var e = i.path || i.composedPath && i.composedPath(), u = e[1].id, r = document.getElementById(u + "wcLabel"), f = i.target || i.srcElement; if (!n) { r.setAttribute("hidden", !0); return } r.removeAttribute("hidden"); r.style.left = t.x + f.offsetLeft + "px"; r.style.top = t.y + f.offsetTop + "px"; r.style.width = t.w + "px"; r.style.height = t.h + "px"; this.hoverDimension = t; document.getElementById(u + "wcSpan").setAttribute("data-l10n-args", JSON.stringify({ word: n[0], count: n[1] })); document.getElementById(u + "wcSpan").innerHTML = n[0] + ":" + n[1]; document.getElementById(u + "wcUrl").setAttribute("href", "https://www.google.com/search?q=" + encodeURIComponent(n[0]) + "+%EC%A3%BC%EC%8B%9D+%ED%85%8C%EB%A7%88+-%EB%AC%B4%EB%A3%8C") } function maskInit(n, t) { var o, h, u, f, i, r, a, v, l, s, c, e; for (str = t.figBase64, o = new Image, o.src = str, o.style.position = "absolute", o.style.left = 0, o.width = n.clientWidth, o.height = n.clientHeight, vvalue = 128, h = document.createElement("canvas"), h.width = o.width, h.height = o.height, u = h.getContext("2d"), u.drawImage(o, 0, 0, o.width, o.height), f = u.getImageData(0, 0, h.width, h.height), i = u.createImageData(f), r = 0; r < f.data.length; r += 4)a = f.data[r] + f.data[r + 1] + f.data[r + 2], v = f.data[r + 3], v < vvalue || a > vvalue * 3 ? (i.data[r] = i.data[r + 1] = i.data[r + 2] = 255, i.data[r + 3] = 0) : (i.data[r] = i.data[r + 1] = i.data[r + 2] = 0, i.data[r + 3] = 255); for (u.putImageData(i, 0, 0), l = document.createElement("canvas").getContext("2d"), l.fillStyle = t.backgroundColor || "#fff", l.fillRect(0, 0, 1, 1), s = l.getImageData(0, 0, 1, 1).data, c = document.createElement("canvas"), c.width = n.clientWidth, c.height = n.clientHeight, u = c.getContext("2d"), u.drawImage(h, 0, 0, h.width, h.height), f = u.getImageData(0, 0, canvas.width, canvas.height), i = u.createImageData(f), e = 0; e < f.data.length; e += 4)f.data[e + 3] > vvalue ? (i.data[e] = s[0], i.data[e + 1] = s[1], i.data[e + 2] = s[2], i.data[e + 3] = s[3]) : (i.data[e] = s[0], i.data[e + 1] = s[1], i.data[e + 2] = s[2], i.data[e + 3] = s[3] ? s[3] - 1 : 0); u.putImageData(i, 0, 0); u = n.firstChild.getContext("2d"); u.drawImage(c, 0, 0); c = u = f = i = l = s = undefined; WordCloud(n.firstChild, { list: listData, fontFamily: t.fontFamily, fontWeight: t.fontWeight, color: t.color, minSize: t.minSize, weightFactor: t.weightFactor, backgroundColor: t.backgroundColor, gridSize: t.gridSize, minRotation: t.minRotation, maxRotation: t.maxRotation, shuffle: t.shuffle, shape: t.shape, rotateRatio: t.rotateRatio, ellipticity: t.ellipticity, clearCanvas: !1, hover: t.hover || cv_handleHover, abortThreshold: 3e3 }) }