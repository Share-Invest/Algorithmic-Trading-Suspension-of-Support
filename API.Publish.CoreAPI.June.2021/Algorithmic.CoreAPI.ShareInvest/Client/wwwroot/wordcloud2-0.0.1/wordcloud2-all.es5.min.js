"use strict"; window.setImmediate || (window.setImmediate = function () { return window.msSetImmediate || window.webkitSetImmediate || window.mozSetImmediate || window.oSetImmediate || function () { if (!window.postMessage || !window.addEventListener) return null; var n = [undefined], t = "zero-timeout-message", i = function (i) { var r = n.length; return n.push(i), window.postMessage(t + r.toString(36), "*"), r }; return window.addEventListener("message", function (i) { if (typeof i.data == "string" && i.data.substr(0, t.length) === t) { i.stopImmediatePropagation(); var r = parseInt(i.data.substr(t.length), 36); n[r] && (n[r](), n[r] = undefined) } }, !0), window.clearImmediate = function (t) { n[t] && (n[t] = undefined) }, i }() || function (n) { window.setTimeout(n, 0) } }()); window.clearImmediate || (window.clearImmediate = function () { return window.msClearImmediate || window.webkitClearImmediate || window.mozClearImmediate || window.oClearImmediate || function (n) { window.clearTimeout(n) } }()), function (n) { var i = function () { var n = document.createElement("canvas"), t; return !n || !n.getContext ? !1 : (t = n.getContext("2d"), !t.getImageData) ? !1 : t.fillText ? Array.prototype.some ? Array.prototype.push ? !0 : !1 : !1 : !1 }(), r = function () { if (i) { for (var n = document.createElement("canvas").getContext("2d"), t = 20, r, u; t;) { if (n.font = t.toString(10) + "px sans-serif", n.measureText("Ｗ").width === r && n.measureText("m").width === u) return t + 1; r = n.measureText("Ｗ").width; u = n.measureText("m").width; t-- } return 0 } }(), u = function (n) { for (var i, r, t = n.length; t; i = Math.floor(Math.random() * t), r = n[--t], n[t] = n[i], n[i] = r); return n }, t = function (n, t) { function et(n, t) { return "hsl(" + (Math.random() * 360).toFixed() + "," + (Math.random() * 30 + 70).toFixed() + "%," + (Math.random() * (t - n) + n).toFixed() + "%)" } var f, v, tt, p; if (i) { if (Array.isArray(n) || (n = [n]), n.forEach(function (t, i) { if (typeof t == "string") { if (n[i] = document.getElementById(t), !n[i]) throw "The element id specified is not found."; } else if (!t.tagName && !t.appendChild) throw "You must pass valid HTML elements, or ID of the element."; }), f = { list: [], fontFamily: '"Trebuchet MS", "Heiti TC", "微軟正黑體", "Arial Unicode MS", "Droid Fallback Sans", sans-serif', fontWeight: "normal", color: "random-dark", minSize: 0, weightFactor: 1, clearCanvas: !0, backgroundColor: "#fff", gridSize: 8, origin: null, drawMask: !1, maskColor: "rgba(255,0,0,0.3)", maskGapWidth: .3, wait: 0, abortThreshold: 0, abort: function () { }, minRotation: -Math.PI / 2, maxRotation: Math.PI / 2, shuffle: !0, rotateRatio: .1, shape: "circle", ellipticity: .65, classes: null, hover: null, click: null }, t) for (v in t) v in f && (f[v] = t[v]); if (typeof f.weightFactor != "function" && (tt = f.weightFactor, f.weightFactor = function (n) { return n * tt }), typeof f.shape != "function") switch (f.shape) { case "circle": default: f.shape = "circle"; break; case "cardioid": f.shape = function (n) { return 1 - Math.sin(n) }; break; case "diamond": case "square": f.shape = function (n) { var t = n % (Math.PI / 2); return 1 / (Math.cos(t) + Math.sin(t)) }; break; case "triangle-forward": f.shape = function (n) { var t = n % (2 * Math.PI / 3); return 1 / (Math.cos(t) + Math.sqrt(3) * Math.sin(t)) }; break; case "triangle": case "triangle-upright": f.shape = function (n) { var t = (n + Math.PI * 3 / 2) % (2 * Math.PI / 3); return 1 / (Math.cos(t) + Math.sqrt(3) * Math.sin(t)) }; break; case "pentagon": f.shape = function (n) { var t = (n + .955) % (2 * Math.PI / 5); return 1 / (Math.cos(t) + .726543 * Math.sin(t)) }; break; case "star": f.shape = function (n) { var t = (n + .955) % (Math.PI / 5); return (n + .955) % (2 * Math.PI / 5) - Math.PI / 5 >= 0 ? 1 / (Math.cos(Math.PI / 5 - t) + 3.07768 * Math.sin(Math.PI / 5 - t)) : 1 / (Math.cos(t) + 3.07768 * Math.sin(t)) } }f.gridSize = Math.max(Math.floor(f.gridSize), 4); var e = f.gridSize, it = e - f.maskGapWidth, rt = Math.abs(f.maxRotation - f.minRotation), ut = Math.min(f.maxRotation, f.minRotation), h, o, s, c, y, ft, l; switch (f.color) { case "random-dark": l = function () { return et(10, 50) }; break; case "random-light": l = function () { return et(50, 90) }; break; default: typeof f.color == "function" && (l = f.color) }p = null; typeof f.classes == "function" && (p = f.classes); var w = !1, b = [], k, ot = function (n) { var i = n.currentTarget, t = i.getBoundingClientRect(), r, u; n.touches ? (r = n.touches[0].clientX, u = n.touches[0].clientY) : (r = n.clientX, u = n.clientY); var f = r - t.left, o = u - t.top, s = Math.floor(f * (i.width / t.width || 1) / e), h = Math.floor(o * (i.height / t.height || 1) / e); return b[s][h] }, st = function (n) { var t = ot(n); if (k !== t) { if (k = t, !t) { f.hover(undefined, undefined, n); return } f.hover(t.item, t.dimension, n) } }, d = function (n) { var t = ot(n); t && (f.click(t.item, t.dimension, n), n.preventDefault()) }, g = [], ht = function (n) { var u; if (g[n]) return g[n]; var t = n * 8, i = t, r = []; for (n === 0 && r.push([c[0], c[1], 0]); i--;)u = 1, f.shape !== "circle" && (u = f.shape(i / t * 2 * Math.PI)), r.push([c[0] + n * u * Math.cos(-i / t * 2 * Math.PI), c[1] + n * u * Math.sin(-i / t * 2 * Math.PI) * f.ellipticity, i / t * 2 * Math.PI]); return g[n] = r, r }, nt = function () { return f.abortThreshold > 0 && (new Date).getTime() - ft > f.abortThreshold }, ct = function () { return f.rotateRatio === 0 ? 0 : Math.random() > f.rotateRatio ? 0 : rt === 0 ? ut : ut + Math.random() * rt }, lt = function (n, t, i) { var a = !1, l = f.weightFactor(t), o, v, u, et; if (l <= f.minSize) return !1; o = 1; l < r && (o = function () { for (var n = 2; n * l < r;)n += 2; return n }()); v = document.createElement("canvas"); u = v.getContext("2d", { willReadFrequently: !0 }); u.font = f.fontWeight + " " + (l * o).toString(10) + "px " + f.fontFamily; var b = u.measureText(n).width / o, y = Math.max(l * o, u.measureText("m").width, u.measureText("Ｗ").width) / o, k = b + y * 2, d = y * 3, st = Math.ceil(k / e), ht = Math.ceil(d / e); k = st * e; d = ht * e; var tt = -b / 2, it = -y * .4, p = Math.ceil((k * Math.abs(Math.sin(i)) + d * Math.abs(Math.cos(i))) / e), w = Math.ceil((k * Math.abs(Math.cos(i)) + d * Math.abs(Math.sin(i))) / e), g = w * e, rt = p * e; if (v.setAttribute("width", g), v.setAttribute("height", rt), a && (document.body.appendChild(v), u.save()), u.scale(1 / o, 1 / o), u.translate(g * o / 2, rt * o / 2), u.rotate(-i), u.font = f.fontWeight + " " + (l * o).toString(10) + "px " + f.fontFamily, u.fillStyle = "#000", u.textBaseline = "middle", u.fillText(n, tt * o, (it + l * .5) * o), et = u.getImageData(0, 0, g, rt).data, nt()) return !1; a && (u.strokeRect(tt * o, it, b * o, y * o), u.restore()); for (var ot = [], c = w, h, ut, ft, s = [p / 2, w / 2, p / 2, w / 2]; c--;)for (h = p; h--;) { ft = e; n: { while (ft--) for (ut = e; ut--;)if (et[((h * e + ft) * g + (c * e + ut)) * 4 + 3]) { ot.push([c, h]); c < s[3] && (s[3] = c); c > s[1] && (s[1] = c); h < s[0] && (s[0] = h); h > s[2] && (s[2] = h); a && (u.fillStyle = "rgba(255, 0, 0, 0.5)", u.fillRect(c * e, h * e, e - .5, e - .5)); break n } a && (u.fillStyle = "rgba(0, 0, 255, 0.5)", u.fillRect(c * e, h * e, e - .5, e - .5)) } } return a && (u.fillStyle = "rgba(0, 255, 0, 0.5)", u.fillRect(s[3] * e, s[0] * e, (s[1] - s[3] + 1) * e, (s[2] - s[0] + 1) * e)), { mu: o, occupied: ot, bounds: s, gw: w, gh: p, fillTextOffsetX: tt, fillTextOffsetY: it, fillTextWidth: b, fillTextHeight: y, fontSize: l } }, at = function (n, t, i, r, u) { for (var c = u.length, f, e; c--;)if (f = n + u[c][0], e = t + u[c][1], f >= o || e >= s || f < 0 || e < 0 || !h[f][e]) return !1; return !0 }, vt = function (t, i, r, u, o, s, h, c, a) { var y = r.fontSize, w, b, k, v; w = l ? l(u, o, y, s, h) : f.color instanceof Array ? f.color.shift() || "black" : f.color; b = p ? p(u, o, y, s, h) : f.classes; v = r.bounds; k = { x: (t + v[3]) * e, y: (i + v[0]) * e, w: (v[1] - v[3] + 1) * e, h: (v[2] - v[0] + 1) * e }; n.forEach(function (n) { var o, s, h, l, v, p, k; if (n.getContext) o = n.getContext("2d"), s = r.mu, o.save(), o.scale(1 / s, 1 / s), o.font = f.fontWeight + " " + (y * s).toString(10) + "px " + f.fontFamily, o.fillStyle = w, o.translate((t + r.gw / 2) * e * s, (i + r.gh / 2) * e * s), c !== 0 && o.rotate(-c), o.textBaseline = "middle", o.fillText(u, r.fillTextOffsetX * s, (r.fillTextOffsetY + y * .5) * s), o.restore(); else { h = document.createElement("span"); l = ""; l = "rotate(" + -c / Math.PI * 180 + "deg) "; r.mu !== 1 && (l += "translateX(-" + r.fillTextWidth / 4 + "px) scale(" + 1 / r.mu + ")"); v = { position: "absolute", display: "block", font: f.fontWeight + " " + y * r.mu + "px " + f.fontFamily, left: (t + r.gw / 2) * e + r.fillTextOffsetX + "px", top: (i + r.gh / 2) * e + r.fillTextOffsetY + "px", width: r.fillTextWidth + "px", height: r.fillTextHeight + "px", lineHeight: y + "px", whiteSpace: "nowrap", transform: l, webkitTransform: l, msTransform: l, transformOrigin: "50% 40%", webkitTransformOrigin: "50% 40%", msTransformOrigin: "50% 40%" }; w && (v.color = w); h.textContent = u; for (p in v) h.style[p] = v[p]; if (a) for (k in a) h.setAttribute(k, a[k]); b && (h.className += b); n.appendChild(h) } }) }, yt = function (t, i, r, u, f) { if (!(t >= o) && !(i >= s) && !(t < 0) && !(i < 0)) { if (h[t][i] = !1, r) { var c = n[0].getContext("2d"); c.fillRect(t * e, i * e, it, it) } w && (b[t][i] = { item: f, dimension: u }) } }, pt = function (t, i, r, u, o, s) { var a = o.occupied, v = f.drawMask, c, y, h, l; for (v && (c = n[0].getContext("2d"), c.save(), c.fillStyle = f.maskColor), w && (h = o.bounds, y = { x: (t + h[3]) * e, y: (i + h[0]) * e, w: (h[1] - h[3] + 1) * e, h: (h[2] - h[0] + 1) * e }), l = a.length; l--;)yt(t + a[l][0], i + a[l][1], v, y, s); v && c.restore() }, wt = function (n) { var e, h, a, l, t, i, c, v, r, p; if ((Array.isArray(n) ? (e = n[0], h = n[1]) : (e = n.word, h = n.weight, a = n.attributes), l = ct(), t = lt(e, h, l), !t) || nt() || (i = t.bounds, i[1] - i[3] + 1 > o || i[2] - i[0] + 1 > s)) return !1; for (c = y + 1, v = function (i) { var r = Math.floor(i[0] - t.gw / 2), u = Math.floor(i[1] - t.gh / 2), f = t.gw, o = t.gh; return at(r, u, f, o, t.occupied) ? (vt(r, u, t, e, h, y - c, i[2], l, a), pt(r, u, f, o, t, n), !0) : !1 }; c--;)if (r = ht(y - c), f.shuffle && (r = [].concat(r), u(r)), p = r.some(v), p) return !0; return !1 }, a = function (t, i, r) { if (i) return !n.some(function (n) { var u = document.createEvent("CustomEvent"); return u.initCustomEvent(t, !0, i, r || {}), !n.dispatchEvent(u) }, this); n.forEach(function (n) { var u = document.createEvent("CustomEvent"); u.initCustomEvent(t, !0, i, r || {}); n.dispatchEvent(u) }, this) }, bt = function () { var t = n[0], it, i, r, u, l, rt, ut, et, ot, g, v, p; if (t.getContext ? (o = Math.floor(t.width / e), s = Math.floor(t.height / e)) : (it = t.getBoundingClientRect(), o = Math.floor(it.width / e), s = Math.floor(it.height / e)), a("wordcloudstart", !0)) { if (c = f.origin ? [f.origin[0] / e, f.origin[1] / e] : [o / 2, s / 2], y = Math.floor(Math.sqrt(o * o + s * s)), h = [], !t.getContext || f.clearCanvas) for (n.forEach(function (n) { if (n.getContext) { var t = n.getContext("2d"); t.fillStyle = f.backgroundColor; t.clearRect(0, 0, o * (e + 1), s * (e + 1)); t.fillRect(0, 0, o * (e + 1), s * (e + 1)) } else n.textContent = "", n.style.backgroundColor = f.backgroundColor }), i = o; i--;)for (h[i] = [], r = s; r--;)h[i][r] = !0; else { for (l = document.createElement("canvas").getContext("2d"), l.fillStyle = f.backgroundColor, l.fillRect(0, 0, 1, 1), rt = l.getImageData(0, 0, 1, 1).data, ut = t.getContext("2d").getImageData(0, 0, o * e, s * e).data, i = o; i--;)for (h[i] = [], r = s; r--;) { ot = e; n: while (ot--) for (et = e; et--;)for (u = 4; u--;)if (ut[((r * e + ot) * o * e + (i * e + et)) * 4 + u] !== rt[u]) { h[i][r] = !1; break n } h[i][r] !== !1 && (h[i][r] = !0) } ut = l = rt = undefined } if (f.hover || f.click) { for (w = !0, i = o + 1; i--;)b[i] = []; f.hover && t.addEventListener("mousemove", st); f.click && (t.addEventListener("click", d), t.addEventListener("touchstart", d), t.addEventListener("touchend", function (n) { n.preventDefault() }), t.style.webkitTapHighlightColor = "rgba(0, 0, 0, 0)"); t.addEventListener("wordcloudstart", function ct() { t.removeEventListener("wordcloudstart", ct); t.removeEventListener("mousemove", st); t.removeEventListener("click", d); k = undefined }) } u = 0; f.wait !== 0 ? (g = window.setTimeout, v = window.clearTimeout) : (g = window.setImmediate, v = window.clearImmediate); var lt = function (t, i) { n.forEach(function (n) { n.addEventListener(t, i) }, this) }, ht = function (t, i) { n.forEach(function (n) { n.removeEventListener(t, i) }, this) }, tt = function tt() { ht("wordcloudstart", tt); v(p) }; lt("wordcloudstart", tt); p = g(function at() { if (u >= f.list.length) { v(p); a("wordcloudstop", !1); ht("wordcloudstart", tt); return } ft = (new Date).getTime(); var n = wt(f.list[u]), t = !a("wordclouddrawn", !0, { item: f.list[u], drawn: n }); if (nt() || t) { v(p); f.abort(); a("wordcloudabort", !1); a("wordcloudstop", !1); ht("wordcloudstart", tt); return } u++; p = g(at, f.wait) }, f.wait) } }; bt() } }; t.isSupported = i; t.minFontSize = r; typeof define == "function" && define.amd ? define("wordcloud", [], function () { return t }) : typeof module != "undefined" && module.exports ? module.exports = t : n.WordCloud = t }(undefined);