// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareInvest.CoreAPI;

namespace ShareInvest.Migrations
{
    [DbContext(typeof(CoreApiDbContext))]
    [Migration("20200728084808_MonoCoreAPI")]
    partial class MonoCoreAPI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.6.20312.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShareInvest.Models.Codes", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<double>("MarginRate")
                        .HasColumnType("float");

                    b.Property<string>("MaturityMarketCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("ShareInvest.Models.Days", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code", "Date");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("ShareInvest.Models.Futures", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Code", "Date");

                    b.ToTable("Futures");
                });

            modelBuilder.Entity("ShareInvest.Models.Options", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Code", "Date");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("ShareInvest.Models.Privacy", b =>
                {
                    b.Property<string>("Security")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("CodeStrategics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<string>("SecuritiesAPI")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SecurityAPI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Security");

                    b.ToTable("Privacies");
                });

            modelBuilder.Entity("ShareInvest.Models.Stocks", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Code", "Date");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("ShareInvest.Models.Days", b =>
                {
                    b.HasOne("ShareInvest.Models.Codes", null)
                        .WithMany("Days")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShareInvest.Models.Futures", b =>
                {
                    b.HasOne("ShareInvest.Models.Codes", null)
                        .WithMany("Futures")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShareInvest.Models.Options", b =>
                {
                    b.HasOne("ShareInvest.Models.Codes", null)
                        .WithMany("Options")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShareInvest.Models.Stocks", b =>
                {
                    b.HasOne("ShareInvest.Models.Codes", null)
                        .WithMany("Stocks")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
